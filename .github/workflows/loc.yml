name: Total LOC Counter

on:
  schedule:
    - cron: '0 0 * * *'  # Daily
  workflow_dispatch:

permissions:
  contents: write  # Required for pushing README updates

jobs:
  count-loc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: true  # Required for git push

      - name: Verify token is available
        run: |
          if [ -z "${{ secrets.PERSONAL_TOKEN }}" ]; then
            echo "::error::PERSONAL_TOKEN secret is missing or empty"
            exit 1
          else
            echo "Token is available (length: ${#PERSONAL_TOKEN} chars)"
          fi
        env:
          PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }}

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq cloc
          # More reliable tokei installation
          curl -sSL https://github.com/XAMPPRocky/tokei/releases/download/v12.1.2/tokei-x86_64-unknown-linux-gnu.tar.gz | \
            tar xzf - --wildcards '*/tokei' --strip-components=1
          sudo mv tokei /usr/local/bin/
          tokei --version  # Verify installation

      - name: Fetch repositories
        id: fetch-repos
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
          GITHUB_USER: ${{ github.repository_owner }}
        run: |
          set -e
          echo "Starting repository fetch for user: $GITHUB_USER"
          
          # Fetch first 3 repos for testing (keeping your original limit)
          REPOS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/users/$GITHUB_USER/repos?per_page=3&sort=updated" | \
            jq -r '.[].clone_url')
          
          echo "Repositories to process:"
          echo "$REPOS"
          echo "REPOS=$REPOS" >> $GITHUB_ENV

      - name: Count lines of code (all repos)
        id: count-loc
        run: |
          set -ex
          TOTAL_LOC=0
          COUNT=0
          
          for REPO in $REPOS; do
            ((COUNT++))
            REPO_NAME=$(basename "$REPO" .git)
            echo "Processing $COUNT: $REPO_NAME"
            
            git clone --depth 1 "$REPO" temp_repo || {
              echo "Clone failed, skipping..."
              continue
            }
            
            # Try both counters
            LOC_TOKEI=$(tokei -t=All -o json temp_repo | jq '.total.code // 0')
            LOC_CLOC=$(cloc temp_repo --json | jq '.SUM.code // 0')
            
            echo "Tokei: $LOC_TOKEI | CLOC: $LOC_CLOC"
            
            # Use whichever gives a non-zero result
            if [ "$LOC_CLOC" -gt 0 ]; then
              LOC=$LOC_CLOC
            else
              LOC=$LOC_TOKEI
            fi
            
            TOTAL_LOC=$((TOTAL_LOC + LOC))
            rm -rf temp_repo
          done
          
          echo "Final count: $TOTAL_LOC"
          echo "TOTAL_LOC=$TOTAL_LOC" >> $GITHUB_ENV

      - name: Update README
        if: success() && env.TOTAL_LOC != '0'
        run: |
          CURRENT_DATE=$(date +"%Y-%m-%d %H:%M:%S")
          # More robust replacement using comment markers
          sed -i -e '/<!-- LOC_START -->/,/<!-- LOC_END -->/{
              /Total Lines of Code:/s/: .*/: '$TOTAL_LOC'/
          }' -e "s/Last updated: .*/Last updated: $CURRENT_DATE/" README.md
          
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add README.md
          git commit -m "ðŸ“ˆ Update LOC count to $TOTAL_LOC [skip ci]"
          git push
