name: Total LOC Counter

on:
  schedule:
    - cron: '0 0 * * *'  # Daily
  workflow_dispatch:

jobs:
  count-loc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Verify token is available
        run: |
          if [ -z "${{ secrets.PERSONAL_TOKEN }}" ]; then
            echo "::error::PERSONAL_TOKEN secret is missing or empty"
            exit 1
          else
            echo "Token is available (length: ${#PERSONAL_TOKEN} chars)"
          fi
        env:
          PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }}

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq cloc
          curl -sSL https://github.com/XAMPPRocky/tokei/releases/latest/download/tokei-x86_64-unknown-linux-musl.tar.gz | tar xz --wildcards '*/tokei' --strip-components=1
          sudo mv tokei /usr/local/bin/
      
      - name: Fetch repositories
        id: fetch-repos
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
          GITHUB_USER: ${{ github.repository_owner }}
        run: |
          set -e
          echo "Starting repository fetch for user: $GITHUB_USER"
          
          # First, verify API access
          API_RESPONSE=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/users/$GITHUB_USER")
          echo "API user response: $API_RESPONSE"
          
          # Fetch first 3 repos for testing
          REPOS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/users/$GITHUB_USER/repos?per_page=3" | jq -r '.[].clone_url')
          
          echo "Repositories to process:"
          echo "$REPOS"
          echo "REPOS=$REPOS" >> $GITHUB_ENV

      - name: Debug first repository
        run: |
          set -x
          FIRST_REPO=$(echo "$REPOS" | head -1)
          echo "Debugging first repo: $FIRST_REPO"
          
          git clone --depth 1 "$FIRST_REPO" debug_repo
          echo "Repository contents:"
          ls -la debug_repo
          
          echo "Tokei output:"
          tokei debug_repo -o json | jq .
          
          echo "CLOC output:"
          cloc debug_repo --json | jq .
          
          rm -rf debug_repo

      - name: Count lines of code (all repos)
        if: success()
        run: |
          set -ex
          TOTAL_LOC=0
          COUNT=0
          
          for REPO in $REPOS; do
            ((COUNT++))
            REPO_NAME=$(basename "$REPO" .git)
            echo "Processing $COUNT: $REPO_NAME"
            
            git clone --depth 1 "$REPO" temp_repo || {
              echo "Clone failed, skipping..."
              continue
            }
            
            # Try both counters
            LOC_TOKEI=$(tokei -t=All -o json temp_repo | jq '.total.code' || echo 0)
            LOC_CLOC=$(cloc temp_repo --json | jq '.SUM.code' || echo 0)
            
            echo "Tokei: $LOC_TOKEI | CLOC: $LOC_CLOC"
            
            # Use whichever gives a non-zero result
            if [ "$LOC_CLOC" -gt 0 ]; then
              LOC=$LOC_CLOC
            else
              LOC=$LOC_TOKEI
            fi
            
            TOTAL_LOC=$((TOTAL_LOC + LOC))
            rm -rf temp_repo
          done
          
          echo "Final count: $TOTAL_LOC"
          echo "TOTAL_LOC=$TOTAL_LOC" >> $GITHUB_ENV

      - name: Update README
        if: success() && env.TOTAL_LOC != '0'
        run: |
          echo "Updating README with total: $TOTAL_LOC"
          sed -i "s/Total Lines of Code Written: .*/Total Lines of Code Written: $TOTAL_LOC/" README.md
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git commit -am "Update total LOC to $TOTAL_LOC [skip ci]"
          git push