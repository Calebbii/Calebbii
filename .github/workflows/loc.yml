name: Total LOC Counter

on:
  schedule:
    - cron: '0 0 * * *'  # Daily
  workflow_dispatch:

jobs:
  count-loc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq
          curl -sSL https://github.com/XAMPPRocky/tokei/releases/latest/download/tokei-x86_64-unknown-linux-gnu.tar.gz | tar xz -C /usr/local/bin
          chmod +x /usr/local/bin/tokei
      
      - name: Fetch all repositories
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}  # Using GitHub Secret
          GITHUB_USER: ${{ github.repository_owner }}
        run: |
          set -e
          PAGE=1
          REPOS=""
          while true; do
            echo "Fetching page $PAGE of repositories..."
            RESPONSE=$(curl -f -s -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/users/$GITHUB_USER/repos?per_page=100&page=$PAGE")
            NEW_REPOS=$(echo "$RESPONSE" | jq -r '.[].clone_url')
            
            if [ -z "$NEW_REPOS" ]; then
              echo "No more repositories found"
              break
            fi
            
            REPOS="$REPOS $NEW_REPOS"
            PAGE=$((PAGE + 1))
            
            # Safety limit to prevent infinite loops
            if [ $PAGE -gt 10 ]; then
              echo "Stopping after 10 pages (safety limit)"
              break
            fi
          done
          
          # Store repositories list
          echo "REPOS=${REPOS}" >> $GITHUB_ENV
          echo "Found $(echo $REPOS | wc -w) repositories total"

      - name: Count lines of code
        run: |
          set -e
          TOTAL_LOC=0
          COUNT=0
          
          for REPO in $REPOS; do
            ((COUNT++))
            REPO_NAME=$(basename "$REPO" .git)
            echo "[$COUNT] Processing $REPO_NAME..."
            
            # Clone with timeout
            timeout 300 git clone --depth 1 --quiet "$REPO" temp_repo 2>/dev/null || {
              echo "! Clone failed or timed out, skipping..."
              continue
            }
            
            # Count lines
            LOC=$(tokei -t=All -o json temp_repo | jq '.total.code' || echo 0)
            TOTAL_LOC=$((TOTAL_LOC + LOC))
            echo "   â†’ $LOC lines of code"
            
            # Clean up
            rm -rf temp_repo || true
          done
          
          echo "TOTAL_LOC=$TOTAL_LOC" >> $GITHUB_ENV
          echo "Total lines counted across all repositories: $TOTAL_LOC"

      - name: Update README
        run: |
          if [ -z "$TOTAL_LOC" ]; then
            echo "Error: TOTAL_LOC not set"
            exit 1
          fi
          
          # Update README
          sed -i "s/Total Lines of Code Written: .*/Total Lines of Code Written: $TOTAL_LOC/" README.md
          
          # Only commit if there are changes
          git diff --quiet && {
            echo "No changes to commit"
            exit 0
          }
          
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git commit -am "Update total LOC to $TOTAL_LOC [skip ci]"
          git push